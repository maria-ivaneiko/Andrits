{"version":3,"sources":["assets/images/slide-3.jpg","layouts/Header.tsx","layouts/Footer.tsx","pages/HomePage/SectionHero.tsx","pages/HomePage/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","href","aria-hidden","style","fontSize","arian-hidden","to","Footer","year","Date","getFullYear","SectionHero","src","Slide3","alt","HomePage","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,qC,yJC+C5BC,EAxCiB,WAC9B,OACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,cACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,eACb,uBAAGA,UAAU,MAAMC,KAAK,wBAAuB,uBAAGD,UAAU,iBAAiBE,cAAY,UACzF,uBAAGF,UAAU,MAAMC,KAAK,yBAAwB,uBAAGD,UAAU,kBAAkBE,cAAY,UAC3F,uBAAGF,UAAU,MAAMC,KAAK,uBAAsB,uBAAGD,UAAU,gBAAgBE,cAAY,WAEzF,yBAAKF,UAAU,gBACb,uBAAGA,UAAU,OAAOG,MAAO,CAAEC,SAAU,YAAcH,KAAK,qBACxD,uBAAGD,UAAU,uBAAuBK,eAAa,SADnD,iBAGA,uBAAGL,UAAU,OAAOG,MAAO,CAAEC,SAAU,YAAcH,KAAK,qBACxD,uBAAGD,UAAU,uBAAuBK,eAAa,SADnD,iBAGA,uBAAGL,UAAU,OAAOG,MAAO,CAAEC,SAAU,YAAcH,KAAK,qBACxD,uBAAGD,UAAU,uBAAuBK,eAAa,SADnD,oBAMN,yBAAKL,UAAU,iBACb,yBAAKA,UAAU,iEACb,kBAAC,IAAD,CAAMM,GAAG,IAAIN,UAAU,eAAeC,KAAK,IAA3C,UACA,yBAAKD,UAAU,WACf,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAMA,UAAU,kBAAkBM,GAAG,KAArC,QACA,kBAAC,IAAD,CAAMN,UAAU,WAAWM,GAAG,KAA9B,YACA,kBAAC,IAAD,CAAMN,UAAU,WAAWM,GAAG,KAA9B,YACA,kBAAC,IAAD,CAAMN,UAAU,WAAWM,GAAG,KAA9B,UACA,kBAAC,IAAD,CAAMN,UAAU,WAAWM,GAAG,KAA9B,gBCTGC,EAvBiB,WAC9B,IAAMC,GAAc,IAAIC,MAAOC,cAC/B,OACE,4BAAQV,UAAU,UAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,qBACb,uBAAGA,UAAU,MAAMC,KAAK,wBAAuB,uBAAGD,UAAU,iBAAiBE,cAAY,UACzF,uBAAGF,UAAU,MAAMC,KAAK,yBAAwB,uBAAGD,UAAU,kBAAkBE,cAAY,UAC3F,uBAAGF,UAAU,MAAMC,KAAK,uBAAsB,uBAAGD,UAAU,gBAAgBE,cAAY,WAEzF,yBAAKF,UAAU,qBACb,kBAAC,IAAD,CAAMM,GAAG,IAAIN,UAAU,eAAeC,KAAK,IAA3C,WAEF,yBAAKD,UAAU,qBACb,6CAAqBQ,EAArB,+B,iBCPGG,EAXK,WAChB,OACI,yBAAKX,UAAU,gBACX,yBAAMY,IAAKC,IAAQC,IAAI,KACvB,yBAAKd,UAAU,wBACX,uBAAGA,UAAU,2CAAb,+KCMDe,EARmB,WAChC,OACE,6BACE,kBAAC,EAAD,QCcSC,EAZc,WAC3B,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWH,KAE7B,kBAAC,EAAD,QCPcI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.fcfebfe0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slide-3.d90338a9.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype IProps = {\r\n\r\n}\r\n\r\nconst Header:React.FC<IProps> = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header-top\">\r\n        <div className=\"container | d-flex align-items-center\">\r\n          <div className=\"header-left\">\r\n            <a className=\"btn\" href=\"https://facebook.com\"><i className=\"fa fa-facebook\" aria-hidden=\"true\"></i></a>\r\n            <a className=\"btn\" href=\"https://instagram.com\"><i className=\"fa fa-instagram\" aria-hidden=\"true\"></i></a>\r\n            <a className=\"btn\" href=\"https://twitter.com\"><i className=\"fa fa-twitter\" aria-hidden=\"true\"></i></a>\r\n          </div>\r\n          <div className=\"header-right\">\r\n            <a className=\"ml-3\" style={{ fontSize: '0.875rem' }} href=\"tel:+380931234567\">\r\n              <i className=\"fa fa-phone-alt mr-2\" arian-hidden=\"true\"></i>+380931234567\r\n            </a>\r\n            <a className=\"ml-3\" style={{ fontSize: '0.875rem' }} href=\"tel:+380931234567\">\r\n              <i className=\"fa fa-phone-alt mr-2\" arian-hidden=\"true\"></i>+380961234567\r\n            </a>\r\n            <a className=\"ml-3\" style={{ fontSize: '0.875rem' }} href=\"tel:+380931234567\">\r\n              <i className=\"fa fa-phone-alt mr-2\" arian-hidden=\"true\"></i>+380501234567\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-middle\">\r\n        <div className=\"container | d-flex align-items-center justify-content-between\">\r\n          <Link to=\"/\" className=\"header-brand\" href=\"\">Sanset</Link>\r\n          <div className=\"spacer\"></div>\r\n          <nav className=\"nav nav-header\">\r\n            <Link className=\"nav-link active\" to=\"/\">Home</Link>\r\n            <Link className=\"nav-link\" to=\"/\">About Us</Link>\r\n            <Link className=\"nav-link\" to=\"/\">Products</Link>\r\n            <Link className=\"nav-link\" to=\"/\">Safety</Link>\r\n            <Link className=\"nav-link\" to=\"/\">Reviews</Link>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype IProps = {\r\n\r\n}\r\n\r\nconst Footer:React.FC<IProps> = () => {\r\n  const year:number = new Date().getFullYear();\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"row row-cols-1 row-cols-md-3\">\r\n          <div className=\"col | text-center\">\r\n            <a className=\"btn\" href=\"https://facebook.com\"><i className=\"fa fa-facebook\" aria-hidden=\"true\"></i></a>\r\n            <a className=\"btn\" href=\"https://instagram.com\"><i className=\"fa fa-instagram\" aria-hidden=\"true\"></i></a>\r\n            <a className=\"btn\" href=\"https://twitter.com\"><i className=\"fa fa-twitter\" aria-hidden=\"true\"></i></a>\r\n          </div>\r\n          <div className=\"col | text-center\">\r\n            <Link to=\"/\" className=\"footer-brand\" href=\"\">Sanset</Link>\r\n          </div>\r\n          <div className=\"col | text-center\">\r\n            <p>Copyright &copy; {year}. All rights reserved.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n// Images\r\nimport Slide3 from 'assets/images/slide-3.jpg';\r\n\r\nconst SectionHero = () => {\r\n    return (\r\n        <div className=\"section-hero\">\r\n            <img  src={Slide3} alt=\"\"/>\r\n            <div className=\"section-hero_contant\">\r\n                <p className=\"_description | section-hero_description\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugiat amet libero hic consequatur consequuntur corporis distinctio necessitatibus aperiam voluptates quisquam.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SectionHero;","import React from 'react';\r\n//\r\nimport SectionHero from './SectionHero';\r\ntype IProps = {\r\n\r\n}\r\n\r\nconst HomePage:React.FC<IProps> = () => {\r\n  return (\r\n    <div>\r\n      <SectionHero />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n// Layouts\r\nimport Header from 'layouts/Header';\r\nimport Footer from 'layouts/Footer';\r\n// Pages\r\nimport HomePage from 'pages/HomePage';\r\n\r\ntype IProps = {\r\n\r\n}\r\n\r\nconst App:React.FC<IProps> = () => {\r\n  return (\r\n    <>\r\n      <Header/>\r\n      <Switch>\r\n        <Route path=\"/\" component={HomePage} />\r\n      </Switch>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import './index.scss';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}